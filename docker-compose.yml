version: '3'

services:
    traefik:
        image: traefik
        container_name: traefik
        restart: always
        networks:
            - webgateway
        command: --acme.email=${ACME_MAIL} --docker.domain=${TRAEFIK_DOMAIN}
        ports:
            - "80:80"
            - "443:443"
            #- "8080:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./traefik.toml:/traefik.toml
            - /opt/traefik/acme.json:/acme.json

    deluge:
        image: linuxserver/deluge:136
        restart: always
        networks:
            - web
        volumes:
            - torrents:/torrents
            - configdeluge:/config
            - downloads:/downloads
        environment:
            - PGID=0
            - PUID=0
            - TZ=Europe/Paris
        labels:
            - 'traefik.backend=deluge'
            - 'traefik.port=8112'
            - 'traefik.frontend.rule=Host:deluge.${TRAEFIK_DOMAIN}'
            - 'traefik.frontend.auth.basic=${HTTP_USER}:${HTTP_PASSWORD}'
            - 'traefik.enable=true'

    filerun-db:
        image: mariadb:10.1
        restart: always
        networks:
            - web
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_DATABASE: filerun
        labels:
            - 'traefik.enable=false'

    filerun-web:
        image: afian/filerun
        restart: always
        networks: 
            - web
        environment:
            FR_DB_HOST: filerun-db
            FR_DB_PORT: 3306
            FR_DB_NAME: filerun
            FR_DB_USER: ${MYSQL_USER}
            FR_DB_PASS: ${MYSQL_PASSWORD}
        depends_on:
            - filerun-db
        links:
            - filerun-db:db
        volumes:
            - /data/config/filerun/web:/var/www/html
            - alldata:/user-files
        labels:
            - 'traefik.backend=filerun'
            - 'traefik.port=80'
            - 'traefik.frontend.rule=Host:explore.${TRAEFIK_DOMAIN}'
            - 'traefik.frontend.auth.basic=${HTTP_USER}:${HTTP_PASSWORD}'
            - 'traefik.enable=true'

    plex:
        image: fromenje/seedbox:plex
        build: Dockerfiles/plex
        restart: always
        networks:
            - web
        ports:
            - "32400:32400"
        volumes:
            - config:/config
            - torrents:/torrents
        env_file:
            - config
        labels:
            - 'traefik.backend=plex'
            - 'traefik.port=32400'
            - 'traefik.frontend.rule=Host:plex.${TRAEFIK_DOMAIN}'
            - 'traefik.frontend.auth.basic=${HTTP_USER}:${HTTP_PASSWORD}'
            - 'traefik.enable=true'
            #- com.centurylinklabs.watchtower.enable=false

    # plex:
    #     image: linuxserver/plex
    #     restart: always
    #     network_mode: host
    #     ports:
    #         - "32400:32400"
    #     volumes:
    #         - config:/config
    #         - torrents:/torrents
    #     environment:
    #         - PGID=0
    #         - PUID=0
    #         - TZ=Europe/Paris
    #         - VERSION=latest
    #     labels:
    #         - 'traefik.backend=plex'
    #         - 'traefik.port=32400'
    #         - 'traefik.frontend.rule=Host:plex.${TRAEFIK_DOMAIN}'
    #         - 'traefik.frontend.auth.basic=${HTTP_USER}:${HTTP_PASSWORD}'
    #         - 'traefik.enable=true'


    sonarr:
        image: linuxserver/sonarr:develop
        restart: always
        networks:
            - web
        volumes:
            - configsonarr:/config
            - torrents:/torrents
            - downloads:/downloads
            - /etc/localtime:/etc/localtime:ro
        environment:
            - PGID=0
            - PUID=0
            - TZ=Europe/Paris
        labels:
            - 'traefik.backend=sonarr'
            - 'traefik.port=8989'
            - 'traefik.frontend.rule=Host:sonarr.${TRAEFIK_DOMAIN}'
            - 'traefik.frontend.auth.basic=${HTTP_USER}:${HTTP_PASSWORD}'
            - 'traefik.enable=true'

    jackett:
        image: linuxserver/jackett
        restart: always
        networks:
            - web
        volumes:
            - config:/config
            - torrents:/downloads
            - /etc/localtime:/etc/localtime:ro
        environment:
            - PGID=0
            - PUID=0
            - TZ=Europe/Paris
        labels:
            - 'traefik.backend=jackett'
            - 'traefik.port=9117'
            - 'traefik.frontend.rule=Host:jackett.${TRAEFIK_DOMAIN}'
            - 'traefik.frontend.auth.basic=${HTTP_USER}:${HTTP_PASSWORD}'
            - 'traefik.enable=true'

    radarr:
        image: linuxserver/radarr
        restart: always
        networks:
            - web
        volumes:
            - config:/config
            - downloads:/downloads
            - movies:/movies
            - torrents:/torrents
            - /etc/localtime:/etc/localtime:ro
        environment:
            - PGID=0
            - PUID=0
            - TZ=Europe/Paris
        labels:
            - 'traefik.backend=radarr'
            - 'traefik.port=7878'
            - 'traefik.frontend.rule=Host:radarr.${TRAEFIK_DOMAIN}'
            - 'traefik.frontend.auth.basic=${HTTP_USER}:${HTTP_PASSWORD}'
            - 'traefik.enable=true'

    bazarr:
        image: morpheus65535/bazarr
        restart: always
        networks:
            - web
        volumes:
            - torrents:/torrents
        environment:
            - PGID=0
            - PUID=0
            - TZ=Europe/Paris
        labels:
            - 'traefik.backend=bazarr'
            - 'traefik.port=6767'
            - 'traefik.frontend.rule=Host:bazarr.${TRAEFIK_DOMAIN}'
            - 'traefik.frontend.auth.basic=${HTTP_USER}:${HTTP_PASSWORD}'
            - 'traefik.enable=true'

    tautulli:
        image: linuxserver/tautulli
        restart: always
        networks:
            - web
        volumes:
            - configtautulli:/config
            - config:/logs:ro # Inside of tautulli, bind to logs via "/logs/Plex Media Server/Logs"
        environment:
            - PGID=0
            - PUID=0
            - TZ=Europe/Paris
        labels:
            - 'traefik.backend=tautulli'
            - 'traefik.port=8181'
            - 'traefik.frontend.rule=Host:tautulli.${TRAEFIK_DOMAIN}'
            - 'traefik.frontend.auth.basic=${HTTP_USER}:${HTTP_PASSWORD}'
            - 'traefik.enable=true'

    organizr:
        image: lsiocommunity/organizr
        restart: always
        networks:
            - web
        volumes:
            - configorganizr:/config
        environment:
            - PGID=1000
            - PUID=1000
            - TZ=Europe/Paris
        labels:
            - 'traefik.backend=organizr'
            - 'traefik.port=80'
            - 'traefik.frontend.rule=Host:${TRAEFIK_DOMAIN}'
            - 'traefik.frontend.auth.basic=${HTTP_USER}:${HTTP_PASSWORD}'
            - 'traefik.enable=true'

    portainer:
        image: portainer/portainer
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - web
        command: --admin-password ${PORTAINER_ADMIN_PASSWORD} --host=unix:///var/run/docker.sock
        labels:
            - 'traefik.backend=portainer'
            - 'traefik.port=9000'
            - 'traefik.frontend.rule=Host:portainer.${TRAEFIK_DOMAIN}'
            - 'traefik.enable=true'
    
    # watchtower:
    #     image: v2tec/watchtower
    #     volumes:
    #         - /var/run/docker.sock:/var/run/docker.sock
    #         - /etc/localtime:/etc/localtime:ro
    #     restart: always
    #     environment:
    #         - TZ=Europe/Paris


networks:
    webgateway:
        driver: bridge
    web:
        external:
            name: seedbox_webgateway
volumes:
    alldata:
        driver: local-persist
        driver_opts:
            mountpoint: /data
    config:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config
    configsonarr: 
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/sonarr
    configdeluge: 
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/deluge
    configtautulli:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/tautulli
    configorganizr:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/organizr
    configrtorrent:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/rtorrent
    configflood:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/flood
    torrents:
        driver: local-persist
        driver_opts:
            mountpoint: /data/torrents
    movies:
        driver: local-persist
        driver_opts:
            mountpoint: /data/torrents/Movies
    downloads:
        driver: local-persist
        driver_opts:
            mountpoint: /data/torrents/deluge
